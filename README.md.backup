#  "Введение в микросервисы"

### Задача

*Руководство крупного интернет-магазина, у которого постоянно растёт пользовательская база и количество заказов, рассматривает возможность переделки своей внутренней ИТ-системы на основе микросервисов.*

*Вас пригласили в качестве консультанта для оценки целесообразности перехода на микросервисную архитектуру.*

*Опишите, какие выгоды может получить компания от перехода на микросервисную архитектуру и какие проблемы нужно решить в первую очередь.*


Основные выгоды от внедрения микросервисной архитектуры:

Гибкость системы и простота её развертывания, а именно возможность применять новые технологии и возможность быстро изменять код отдельных её составляющих, не боясь сломать остальные составляющие системы.
Более высокая устойчивость к ошибкам за счет асинхронного взаимодействия между микросервисами, например, при падении микросервиса, отвечающего за корзину интернет-магазина, продолжат работать другие сервисы, отвечающие за просмотр или сравнение товара, добавление в избранное и т.д.
Возможность замены технологий в проекте, например, заменя языка программирования Java на Python или наоборот.
Возможность распределения зон ответственности по разработке и сопровождению отдельных микросервисов между различными командами, в зависимости от их функциональных обязанностей в организации.
Вероятные проблемы, которые нужно будет решить в первую очередь:

Несовместимость некоторых API - возникнет необходимость стандартизовать API между микросервисами, чтобы научить их “общаться” друг с другом и обеспечить возможность разработки микросервисов независимо друг от друга.
Повышение сложности разработки системы и увеличение затрат на её управление - применение различных технологий в разработке микросервисов потребует от команды разработчиков большего профессионализма и опыта, а от команды сопровождения потребуются знания и умения в настройке логирования и сбора метрик микросервисов для скорейшего определения сбоев и проблем в их работе. Также потребуются внедрения систем управления конфигурациями, система хранения артефактов и репозитории для различных микросервисов.
Поскольку при переходе на микросервисную архитектуру повышается частота деплоймента кода, возникает необходимость автоматизации выполнения сборок средствами CI/CD и тестирование результатов деплоймента.
Переход с монолитной системы на микросервисы может занять большое количество времени и далеко не всегда понятно, как разграничить монолит на различные микросервисы.